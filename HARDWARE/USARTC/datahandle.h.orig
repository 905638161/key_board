
#ifndef __DataHandle_H
#define	__DataHandle_H

#include "sys.h"

/**需要发送信息的标志位**/
#define	Version_Information_Flag 				0x0001 		//版本信息，从1开始增加
#define	KeyValue_Information_Flag 				0x0002 		//按键信息
#define	PowerStatus_Information_Flag			0x0004		//电源状态信息
#define	ElectronicFlowmeter_Information_Flag	0x0008  	//电子流量计数据信息
#define	SPO2_Information_Flag		            0x0010		//血氧数据信息
#define	FIO2_Information_Flag		 			0x0020      //顺磁氧数据信息
#define	AA_ETCO2_Information_0_Flag				0x0040 		//AA/EtCO2 发送数据0
#define	AA_ETCO2_Information_1_Flag				0x0080 		//AA/EtCO2 发送数据1
#define	AA_ETCO2_Information_2_Flag				0x0100 		//AA/EtCO2 发送数据2
#define	AA_ETCO2_Information_3_Flag				0x0200 		//AA/EtCO2 发送数据3
#define	Calibration_ID_Information_Flag         0x0400      //校准信息

/**接收到的信息标志位**/
#define    ALARM_SET_FLAG   	1<<0    //报警设置
#define	   KEY_LED_SET_FLAG	    1<<1	//按键LED设置
#define    EFLOW_SET_FLAG		1<<2	//电子流量计设置
#define    IRMA_CAL_FLAG		1<<3	//麻醉气体模快校验
#define    OXYGEN_CAL_FLAG    	1<<4	//顺磁氧校验
#define    EFLOWMETER_SET_FLAG  1<<5	//电子流量计设置
#define    GET_ID_FLAG			1<<6	//ID获取

/**发送信息的数据长度**/
#define	Version_Information_length				9 		//版本信息，从1开始增加
#define	KeyValue_Information_length				7 		//按键信息
#define	PowerStatus_Information_length			7		//电源状态信息
#define	ElectronicFlowmeter_Information_length	10  	//电子流量计数据信息
#define	SPO2_Information_length		            8		//血氧数据信息
#define	FIO2_Information_length		 			8       //顺磁氧数据信息
#define	AA_ETCO2_Information_0_length			10 		//AA/EtCO2 发送数据0
#define	AA_ETCO2_Information_1_length			13 		//AA/EtCO2 发送数据1
#define	AA_ETCO2_Information_2_length			13 		//AA/EtCO2 发送数据2
#define	AA_ETCO2_Information_3_length			10 		//AA/EtCO2 发送数据3
#define	Calibration_ID_Information_length       7       //校准信息

/*数据发送各种类型串口数据的ID*/
enum Data_ID
{
	Version_Information_ID=1,
	KeyValue_Information_ID,
	PowerStatus_Information_ID,
	ElectronicFlowmeter_Information_ID,
	SPO2_Information_ID,
	FIO2_Information_ID,
	AA_ETCO2_Information_0_ID,
	AA_ETCO2_Information_1_ID,
	AA_ETCO2_Information_2_ID,
	AA_ETCO2_Information_3_ID,
	Calibration_ID_Information_ID
	
};

extern u8 AlarmSet_Receive_Data[4];
extern u8 KeyLED_Receive_Data[2];
extern u8 ElectronicFlowmeter_Set_Receive_Data[4];
extern u8 AA_ETCO2_Calibration_Receive_Data[2];
extern u8 FIO2_Calibration_Receive_Data;
extern u8 ElectronicFlowmeter_Calibration_Receive_Data;
extern u8 Obtain_ID_Data;

extern u32 USART_TXD_REGISTER; //发送寄存器
extern u16 USART_RXD_REGISTER ; //接收寄存器

u8 CommunicationDataHandle_TXD(void);

void SPO2_handle(u8 spo2, u8 plus, u8 status);

void IRMA_DataHandle(void);	

void AA_ETCO2_0_handle(u8 EtCO2, u8 FiCO2, u8 IRMA_ID, u16 AtmPressure);
void AA_ETCO2_1_handle(u8 IRMA_ID, u8 EtAA1, u8 FiAA1, u8 EtAA2, u8 FiAA2,
                       u8 EtN2O, u8 FiN2O, u8 AA1ld, u8 AA2ld);
void AA_ETCO2_2_handle(u16 CO2, u16 N2O, u16 AA1, u16 AA2);
void AA_ETCO2_3_handle(u8 Sensor_Err, u8 Data_Valid, u8 Adapter_status, u8 Zero, u8 N2O_Comp);

#endif
