#include "ch452.h"
#include "led.h"
/****************************
// CH452的真正2线接口，含低电平脉冲按键中断在内，只需要2个I/O引脚，兼容I2C/IIC时序
// 两线制方式SCL/SDA，按键中断由SDA产生，接单片机的脉冲/边沿中断引脚
// 对于频率低于24MHz的MCS51，为了节约传输时间，可以适当减少SCL/SDA之间的延时
****************************************************************************/

 /*CH452的初始化程序*/
void CH452_Init()             // CH452的初始化
{
	GPIO_InitTypeDef GPIO_InitStructure; //RCC->APB2ENR|=1<<4;

	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);	
	   
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4|GPIO_Pin_5;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;   //推挽输出
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(GPIOD, &GPIO_InitStructure);
    
	CH452_SCL=1;
	CH452_SDA=1;
	CH452_Write(CH452_SYSON1);	//两线制方式，如果SDA用做按键中断输出，那么命令应该为CH452_SYSON2W(0x04,0x23)		
    CH452_Write(CH452_TWINKLE);
}


/*两线制，启动总线信号*/
void  CH452_I2c_Start_2(void)
{
	CH452_SDA_OUT();
	CH452_SDA=1;     //sda线输出
	CH452_SCL=1;
	delay_us(4);
 	CH452_SDA=0; //START:when CLK is high,DATA change form high to low 
	delay_us(4);
	CH452_SCL=0;//钳住I2C总线，准备发送或接收数据 
}	  



void CH452_I2c_Stop_2(void)
{
    CH452_SDA_OUT();   //sda线输出
	
	CH452_SCL=0;
	CH452_SDA=0;
 	delay_us(4);
	
	CH452_SCL=1;
	CH452_SDA=1;//发送I2C总线结束信号
	delay_us(4);				
    	
}


void CH452_I2c_WrByte(unsigned char dat)	//写一个字节数据
{
	unsigned char i;
	CH452_SDA_OUT();   /* 设置SDA为输出方向 */
	CH452_SCL=0;
	
	for(i=0;i<8;i++)  // 输出8位数据
	{
		if(dat&0x80) 
			{CH452_SDA=1;}
		else 
			{CH452_SDA=0;}
		dat<<=1;
		delay_us(2);
			
		CH452_SCL=1;
        delay_us(2);
			
		CH452_SCL=0;
		delay_us(2);
	}
	CH452_SDA=1;
	delay_us(2);
	
	CH452_SCL=1;  // 接收应答
	delay_us(2);
	
	CH452_SCL=0;
	delay_us(2);
}

u8  CH452_I2c_RdByte(void)		//读一个字节数据
{
	unsigned char dat,i;
	CH452_SDA_IN();   /* 设置SDA为输入方向 */
	dat=0;
	for(i=0;i<8;i++)  // 输入8位数据
	{
		CH452_SCL=0;
		delay_us(2);
		CH452_SCL=1;
		dat<<=1;
		if(READ_CH452_SDA) dat++;  // 输入1位
		CH452_SCL=0;
		delay_us(1);

	}
	return	dat;
	
}

void CH452_Write(unsigned short cmd)	//写命令
{
	
	CH452_I2c_Start_2();                  /*启动总线*/
   	CH452_I2c_WrByte(((unsigned char)(cmd>>7)&CH452_I2C_MASK)|CH452_I2C_ADDR1);  // CH452的ADDR=1时(默认)
	
   	CH452_I2c_WrByte((unsigned char)cmd); /*发送数据*/
	
  	CH452_I2c_Stop_2();                   /*结束总线*/ 

}

u8 CH452_Read(void)		//读取按键
{
	unsigned char keycode;
   	CH452_I2c_Start_2();                /*启动总线*/
	
   	CH452_I2c_WrByte(((unsigned char)(CH452_GET_KEY>>7)&CH452_I2C_MASK)|0x01|CH452_I2C_ADDR1); 
	
   	keycode=CH452_I2c_RdByte();         /*读取数据*/
	CH452_I2c_Stop_2();                 /*结束总线*/ 
	
	return(keycode);
	
}
