#include "sys.h"
#include "encoder.h"
#include "delay.h"
//#include "stm32f10x_exti.h"
/**
* @file 	encoder.c
* @brief	飞梭旋钮的驱动配置
* @details	This is the detail description.
* @author	ETERNITY
* @date		2018-06-26
* @version	001
* @par Copyright (c):
* 		易世恒公司
* @par History:
*	  version: author, date, desc

*/


/**
* @brief 飞梭旋钮的IO口初始化
* @param  None
* @return None
* @details a full description of what the function does
*/
void Rotary_Encoder_Init(void)
{
    GPIO_InitTypeDef  GPIO_InitStructure;
    EXTI_InitTypeDef  EXTI_InitStructure;
    NVIC_InitTypeDef  NVIC_InitStructure;

    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD | RCC_APB2Periph_AFIO, ENABLE); //使能或者失能APB2外设时钟

    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;       //PD0   TS-A
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;//最高输出速率2MHz
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;//上拉输入
    GPIO_Init(GPIOD, &GPIO_InitStructure);//初始化外设GPIOx寄存器
    /**the detail description**/
    GPIO_EXTILineConfig(GPIO_PortSourceGPIOD, GPIO_PinSource0);//选择GPIO管脚用作外部中断线路


    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;       //PD1	TS-B
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;//最高输出速率2MHz
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;//上拉输入
    GPIO_Init(GPIOD, &GPIO_InitStructure);//初始化外设GPIOx寄存器



    EXTI_InitStructure.EXTI_Line = EXTI_Line0;//中断线
    EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;//中断请求
    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;//下降沿为中断请求
    EXTI_InitStructure.EXTI_LineCmd = ENABLE;//使能外部中断
    EXTI_Init(&EXTI_InitStructure);//检查指定的EXTI线路触发请求发生与否

    NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn; //中断号；
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2; //抢占优先级；
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3; //响应优先级；
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;

    NVIC_Init(&NVIC_InitStructure);

}

/**
* @brief 中断服务函数
* @param None
* @return None
* @details
*/
void EXTI0_IRQHandler(void)
{
    static s8 count;

    delay_ms(10);
    if(EXTI_GetFlagStatus(EXTI_Line0) != RESET) //检查指定的EXTI线路标志位设置与否
    {

        if(TS_A == 0)
        {
            if(TS_B == 0)
            {
                count++;
            }
            else
            {
                count--;
            }
        }

EXTI_ClearFlag(EXTI_Line0);//清除EXTI线路挂起标志位


    }



}

